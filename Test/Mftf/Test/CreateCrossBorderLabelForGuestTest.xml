<?xml version="1.0" encoding="UTF-8"?>
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="CreateCrossBorderLabelForGuestTest" extends="StorefrontGuestCheckoutTest">
        <annotations>
            <group value="dhlecomus"/>
            <features value="Create Shipping Label"/>
            <stories value="DHLGW-789: Request Domestic Label"/>
            <title value="Request Crooss border Label from DHL eCom US web service"/>
            <severity value="CRITICAL"/>
            <description value="Verify that shipping label can be created manually for cross border DHL eCommerce orders."/>
        </annotations>
        <before>
            <magentoCLI stepKey="ecomUsSetActive" command="config:set {{EcomUsCarrierActive.path}} {{EcomUsCarrierActive.value}}"/>
            <magentoCLI stepKey="ecomusSetTitle" command="config:set {{EcomUsCheckoutSettingsTitle.path}} {{EcomUsCheckoutSettingsTitle.value}}"/>
            <magentoCLI stepKey="ecomusSetEmulatedCarrier" command="config:set {{EcomUsCheckoutSettingsEmulatedCarrier.path}} {{EcomUsCheckoutSettingsEmulatedCarrier.value}}"/>
            <magentoCLI stepKey="ecomusSetCheckoutDefaultCountry" command="config:set {{EcomUsCheckoutDefaultCountry.path}} {{EcomUsCheckoutDefaultCountry.value}}"/>
            <magentoCLI stepKey="ecomusSetClientID" command="config:set {{EcomUsAccountSettingsApiUsername.path}} {{EcomUsAccountSettingsApiUsername.value}}"/>
            <magentoCLI stepKey="ecomusSetClientSecret" command="config:set {{EcomUsAccountSettingsApiPassword.path}} {{EcomUsAccountSettingsApiPassword.value}}"/>
            <magentoCLI stepKey="ecomusSetPickupId" command="config:set {{EcomUsAccountSettingsPickupAccountNumber.path}} {{EcomUsAccountSettingsPickupAccountNumber.value}}"/>
            <magentoCLI stepKey="ecomusSetDistributionCenter" command="config:set {{EcomUsAccountSettingsDistributionCenter.path}} {{EcomUsAccountSettingsDistributionCenter.value}}"/>
            <magentoCLI stepKey="ecomusSetShippingOriginCountry" command="config:set {{EcomUsShippingOriginCountry.path}} {{EcomUsShippingOriginCountry.value}}"/>
            <magentoCLI stepKey="ecomusSetShippingOriginRegion" command="config:set {{EcomUsShippingOriginRegion.path}} {{EcomUsShippingOriginRegion.value}}"/>
            <magentoCLI stepKey="ecomusSetShippingOriginZip" command="config:set {{EcomUsShippingOriginZip.path}} {{EcomUsShippingOriginZip.value}}"/>
            <magentoCLI stepKey="ecomusSetShippingOriginCity" command="config:set {{EcomUsShippingOriginCity.path}} {{EcomUsShippingOriginCity.value}}"/>
            <magentoCLI stepKey="ecomusSetShippingOriginStreetLine1" command="config:set {{EcomUsShippingOriginStreetLine1.path}} '{{EcomUsShippingOriginStreetLine1.value}}'"/>
            <magentoCLI stepKey="ecomusSetStoreInformationPhone" command="config:set {{EcomUsGeneralStoreInformationPhone.path}} {{EcomUsGeneralStoreInformationPhone.value}}"/>
            <magentoCLI stepKey="ecomusSetStoreInformationName" command="config:set {{EcomUsGeneralStoreInformationName.path}} {{EcomUsGeneralStoreInformationName.value}}"/>
            <magentoCLI command="cache:clean config full_page" stepKey="cleanInvalidatedCaches"/>
        </before>
        <remove keyForRemoval="guestCheckoutFillingShippingSection"/>
        <actionGroup ref="GuestCheckoutFillingShippingSectionWithCountryActionGroup" stepKey="guestCheckoutFillingShippingSectionEcomUs" before="guestSelectCheckMoneyOrderPayment">
            <argument name="customerVar" value="Simple_UK_Customer_For_Shipment"/>
            <argument name="customerAddressVar" value="CustomerUKAddress"/>
            <argument name="shippingMethod" value="DhlEcomUs"/>
        </actionGroup>
        <remove keyForRemoval="guestSeeAddress"/>
        <actionGroup ref="CheckBillingAddressInCheckoutActionGroup" stepKey="guestSeeAddressEcomUs" after="guestSelectCheckMoneyOrderPayment">
            <argument name="customerVar" value="Simple_UK_Customer_For_Shipment"/>
            <argument name="customerAddressVar" value="CustomerUKAddress"/>
        </actionGroup>
        <!-- We use a custom address, the check is hardcoded in the StoreFrontCustomerTest, we don't need it -->
        <remove keyForRemoval="seeAdminOrderGuest"/>
        <remove keyForRemoval="seeAdminOrderEmail"/>
        <remove keyForRemoval="seeAdminOrderBillingAddress"/>
        <remove keyForRemoval="seeAdminOrderShippingAddress"/>
        <!-- Order gets created and opened -->
        <actionGroup ref="AdminOpenShipmentPackagingPopupActionGroup" stepKey="openPackagingPopup" after="seeAdminOrderProduct"/>
        <see stepKey="seePackageDetailsShippingOptions" selector="{{AdminShipmentPackagingPopupSection.packageDetailShippingOptions}}"/>
        <see stepKey="seePackageCustomsShippingOptions" selector="{{AdminShipmentPackagingPopupSection.packageCustomsShippingOptions}}"/>
        <selectOption stepKey="fillItemCountryOfOrigin" selector="{{AdminShipmentPackagingPopupSection.itemCountryOfOrigin('1')}}" userInput="{{ApiSimpleProductCrossBorderAttributes.country_of_origin}}"/>
        <fillField stepKey="fillItemExportDescription" selector="{{AdminShipmentPackagingPopupSection.itemExportDescription('1')}}" userInput="{{ApiSimpleProductCrossBorderAttributes.export_description}}"/>
        <fillField stepKey="fillPackageTareWeight" selector="{{AdminShipmentPackagingPopupSection.packageTareWeight}}" userInput="0.3"/>
        <scrollTo stepKey="scrollDownInPackagingPopup" selector="{{AdminShipmentPackagingPopupSection.popupBottom}}"/>
        <seeInField stepKey="seePackageDescription" selector="{{AdminShipmentPackagingPopupSection.packageDescription}}" userInput="{{ApiSimpleProductCrossBorderAttributes.export_description}}"/>
        <actionGroup ref="AdminSubmitShipmentPackagingPopupActionGroup" stepKey="submitPackagingPopup"/>
        <!-- go to shipment detail view, check existing label -->
        <click stepKey="openShipmentsList" selector="{{AdminOrderDetailsOrderViewSection.shipments}}"/>
        <waitForLoadingMaskToDisappear stepKey="waitForOrderShipmentList"/>
        <click stepKey="openShipmentDetailView" selector="{{AdminOrderShipmentsTabSection.viewGridRow('1')}}"/>
        <waitForPageLoad stepKey="openShipmentDetailViewLoad"/>
        <seeInCurrentUrl stepKey="amOnShipmentDetailViewUrl" url="{{AdminShipmentDetailsPage.url}}"/>
        <see stepKey="seeCreatedLabels" selector="{{AdminShipmentTrackingSection.printLabelButton}}"/>
    </test>
</tests>
